# ShowPulse

A data pipeline with Kafka, Spark Streaming, dbt, Docker, Airflow, and GCP!

## Description

### Objective

This projects uses the Ticketmaster API to collect, transform and then visualize information on events happening in a given city in real time! The data is pre-processed & appended to a BigQuery data warehouse in and then a batch job further processes the data and turns it into the desired tables for my dashboard. Using this dashboard, we will be able to see _________

The project will stream events generated from a fake music streaming service (like Spotify) and create a data pipeline that consumes the real-time data. The data coming in would be similar to an event of a user listening to a song, navigating on the website, authenticating. The data would be processed in real-time and stored to the data lake periodically (every two minutes). The hourly batch job will then consume this data, apply transformations, and create the desired tables for our dashboard to generate analytics. We will try to analyze metrics like popular songs, active users, user demographics etc.

### Dataset

[Ticketmaster](https://developer.ticketmaster.com/) is an API that fetches data about to events (concerts, sporting events, etc) going on around the world. I figured ticketmaster would have most large events, and we could use this data to know when tickets for a show are being released and be the first to get them.


### Tools & Technologies

- Cloud - [**Google Cloud Platform**](https://cloud.google.com)
- Infrastructure as Code software - [**Terraform**](https://www.terraform.io)
- Containerization - [**Docker**](https://www.docker.com), [**Docker Compose**](https://docs.docker.com/compose/)
- Stream Processing - [**Kafka**](https://kafka.apache.org), [**Spark Streaming**](https://spark.apache.org/docs/latest/streaming-programming-guide.html)
- Orchestration - [**Airflow**](https://airflow.apache.org)
- Transformation - [**dbt**](https://www.getdbt.com)
- Data Lake - [**Google Cloud Storage**](https://cloud.google.com/storage)
- Data Warehouse - [**BigQuery**](https://cloud.google.com/bigquery)
- Data Visualization - [**Data Studio**](https://datastudio.google.com/overview)
- Language - [**Python**](https://www.python.org)

### Architecture

![streamify-architecture](images/Streamify-Architecture.jpg)

### Final Result

![dashboard](images/dashboard.png)
## Setup

**WARNING: You will be charged for all the infra setup. You can avail 300$ in credit by creating a new account on GCP.**
### Pre-requisites

If you already have a Google Cloud account and a working terraform setup, you can skip the pre-requisite steps.

- Google Cloud Platform. 
  - [GCP Account and Access Setup](setup/gcp.md)
  - [gcloud alternate installation method - Windows](https://github.com/DataTalksClub/data-engineering-zoomcamp/blob/main/week_1_basics_n_setup/1_terraform_gcp/windows.md#google-cloud-sdk)
- Terraform
  - [Setup Terraform](https://github.com/DataTalksClub/data-engineering-zoomcamp/blob/main/week_1_basics_n_setup/1_terraform_gcp/windows.md#terraform)


### Get Going!

A video walkthrough of how I run my project - [YouTube Video](https://youtu.be/vzoYhI8KTlY)

- Procure infra on GCP with Terraform - [Setup](setup/terraform.md)
- (Extra) SSH into your VMs, Forward Ports - [Setup](setup/ssh.md)
- Setup Kafka Compute Instance and start sending messages from Eventsim - [Setup](setup/kafka.md)
- Setup Spark Cluster for stream processing - [Setup](setup/spark.md)
- Setup Airflow on Compute Instance to trigger the hourly data pipeline - [Setup](setup/airflow.md)


### Debug

If you run into issues, see if you find something in this debug [guide](setup/debug.md).

### How can I make this better?!
- Add more data about the artist/attraction (like Spotify plays per month, avg ticket price) and then call out great deals
- Choose managed infrastructure like Cloud Composer for Airflow, Dataproc for Spark and Confluent Cloud for Kafka
- Optimize the Kafka & Spark streaming setup 
- Build dimensions and facts incrementally instead of full refresh
- Create more dimensional models
- Include CI/CD
- Include Terraform and the infrastructure setup
- Add more visualizations

### Special Mentions
I learned this all thanks to [DataTalks.Club](https://datatalks.club)!! Thank you so much for offering this Data Engineering course for completely free. All the things I learnt there, enabled me to come up with this project. I had little no no experience with most of these technologies before, and it really helped me gain a better understanding. If you want to upskill on Data Engineering technologies, please check out the [course](https://github.com/DataTalksClub/data-engineering-zoomcamp)!

